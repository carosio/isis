<erl>
%% Be better if we found how to include these in the distribution...
-record (isis_interface, {
	   name :: string(),
	   mac :: binary(),
	   metric = 10 :: integer(),
	   flags :: integer(),
	   enabled = false :: atom(),
	   status :: integer(),
	   bandwidth :: integer(),
	   pid :: pid(),
	   addresses = [] :: [],
	   ifindex :: integer(),
	   mtu :: integer(),
	   mtu6 :: integer()
	  }).

-record (isis_lsp, {
	   lsp_id,
	   id_length,
	   last_update,
	   version,
	   pdu_type,
	   remaining_lifetime,
	   sequence_number,
	   checksum,
	   partition,
	   overload,
	   isis_type,
	   tlv
	  }).

format_last_run({Time, Level, SPF, Reason}) ->
    FixNHPid = fun({Afi, {NHA, NHI, _Pid}}) ->
		       {Afi, {NHA, NHI, undefined}}
	       end,
    F = fun({Node, NexthopNode, NextHops, Metric, Routes, Nodes}) ->
		{Node, NexthopNode, lists:map(FixNHPid, NextHops), Metric, Routes, Nodes}
	end,
    {Time, Level, lists:map(F, SPF), Reason}.

fixup_lsps(LSPs) ->
    Now = isis_protocol:current_timestamp(),
    FixupRL = fun(#isis_lsp{remaining_lifetime = L, last_update = U} = LSP) ->
		      LSP#isis_lsp{remaining_lifetime = (L - (Now - U))}
	      end,
    lists:map(FixupRL, LSPs).

out(Arg) ->
    %% Strip PIDs from interface list, as file:consult does not like them..
    Is = lists:map(fun(I) -> I#isis_interface{pid = undefined} end,
		   isis_system:list_interfaces()),
    Send = 
	[{system_id, isis_system:system_id()},
	 {interfaces, Is},
	 {lspdb_level_1, fixup_lsps(ets:tab2list(isis_lspdb:get_db(level_1)))},
	 {lspdb_level_2, fixup_lsps(ets:tab2list(isis_lspdb:get_db(level_2)))},
	 {rib, ets:tab2list(isis_rib:get_rib_table())},
	 {spf_level_1, format_last_run(spf_summary:last_run(level_1))},
	 {spf_level_2, format_last_run(spf_summary:last_run(level_1))},
	 {frags, isis_system:lsps()},
	 {redistributed_routes, dict:to_list(zclient:get_redistributed_routes())}
	],
    SendBin = erlang:list_to_binary(
		io_lib:format("~p.~n", [Send])),

    [{header, {"Content-Disposition", "attachment; filename=\"isis.state\""}},
     {content, "application/octet-stream", SendBin}].
</erl>
	
